//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OmbMp.Models.OmbMpContextModel", "FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Ombudsmen", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OmbMf.Models.Ombudsman), "Facilities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OmbMf.Models.Facility), true)]

#endregion

namespace OmbMf.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OmbudsmanEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OmbudsmanEntities object using the connection string found in the 'OmbudsmanEntities' section of the application configuration file.
        /// </summary>
        public OmbudsmanEntities() : base("name=OmbudsmanEntities", "OmbudsmanEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OmbudsmanEntities object.
        /// </summary>
        public OmbudsmanEntities(string connectionString) : base(connectionString, "OmbudsmanEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OmbudsmanEntities object.
        /// </summary>
        public OmbudsmanEntities(EntityConnection connection) : base(connection, "OmbudsmanEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Facility> Facilities
        {
            get
            {
                if ((_Facilities == null))
                {
                    _Facilities = base.CreateObjectSet<Facility>("Facilities");
                }
                return _Facilities;
            }
        }
        private ObjectSet<Facility> _Facilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ombudsman> Ombudsmen
        {
            get
            {
                if ((_Ombudsmen == null))
                {
                    _Ombudsmen = base.CreateObjectSet<Ombudsman>("Ombudsmen");
                }
                return _Ombudsmen;
            }
        }
        private ObjectSet<Ombudsman> _Ombudsmen;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Facilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacilities(Facility facility)
        {
            base.AddObject("Facilities", facility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ombudsmen EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOmbudsmen(Ombudsman ombudsman)
        {
            base.AddObject("Ombudsmen", ombudsman);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmbMp.Models.OmbMpContextModel", Name="Facility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Facility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Facility object.
        /// </summary>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        public static Facility CreateFacility(global::System.Int32 facilityId)
        {
            Facility facility = new Facility();
            facility.FacilityId = facilityId;
            return facility;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                if (_FacilityId != value)
                {
                    OnFacilityIdChanging(value);
                    ReportPropertyChanging("FacilityId");
                    _FacilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FacilityId");
                    OnFacilityIdChanged();
                }
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OmbudsmanId
        {
            get
            {
                return _OmbudsmanId;
            }
            set
            {
                OnOmbudsmanIdChanging(value);
                ReportPropertyChanging("OmbudsmanId");
                _OmbudsmanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OmbudsmanId");
                OnOmbudsmanIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OmbudsmanId;
        partial void OnOmbudsmanIdChanging(Nullable<global::System.Int32> value);
        partial void OnOmbudsmanIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmbMp.Models.OmbMpContextModel", "FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Ombudsmen")]
        public Ombudsman Ombudsman
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ombudsman>("OmbMp.Models.OmbMpContextModel.FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Ombudsmen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ombudsman>("OmbMp.Models.OmbMpContextModel.FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Ombudsmen").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ombudsman> OmbudsmanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ombudsman>("OmbMp.Models.OmbMpContextModel.FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Ombudsmen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ombudsman>("OmbMp.Models.OmbMpContextModel.FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Ombudsmen", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmbMp.Models.OmbMpContextModel", Name="Ombudsman")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ombudsman : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ombudsman object.
        /// </summary>
        /// <param name="ombudsmanId">Initial value of the OmbudsmanId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Ombudsman CreateOmbudsman(global::System.Int32 ombudsmanId, global::System.String name, global::System.String userName)
        {
            Ombudsman ombudsman = new Ombudsman();
            ombudsman.OmbudsmanId = ombudsmanId;
            ombudsman.Name = name;
            ombudsman.UserName = userName;
            return ombudsman;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OmbudsmanId
        {
            get
            {
                return _OmbudsmanId;
            }
            set
            {
                if (_OmbudsmanId != value)
                {
                    OnOmbudsmanIdChanging(value);
                    ReportPropertyChanging("OmbudsmanId");
                    _OmbudsmanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OmbudsmanId");
                    OnOmbudsmanIdChanged();
                }
            }
        }
        private global::System.Int32 _OmbudsmanId;
        partial void OnOmbudsmanIdChanging(global::System.Int32 value);
        partial void OnOmbudsmanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmbMp.Models.OmbMpContextModel", "FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Facilities")]
        public EntityCollection<Facility> Facilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Facility>("OmbMp.Models.OmbMpContextModel.FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Facilities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Facility>("OmbMp.Models.OmbMpContextModel.FK_dbo_Facilities_dbo_Ombudsmen_OmbudsmanId", "Facilities", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
